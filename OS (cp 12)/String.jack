// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack
/**
 * Represents character strings. In addition for constructing and disposing
 * strings, the class features methods for getting and setting individual
 * characters of the string, for erasing the string's last character,
 * for appending a character to the string's end, and more typical
 * string-oriented operations.
 */
class String {
	
	field Array block;
	field int length;
	
    /** constructs a new empty string with a maximum length of maxLength
     *  and initial length of 0. */
    constructor String new(int maxLength) {
    	let block = Array.new(maxLength);
    	let length = 0;
    	return this;
    }

    /** Disposes this string. */
    method void dispose() {
    	do Memory.dealloc(block);
    	do Memory.dealloc(this);
    	return;
    }

    /** Returns the current length of this string. */
    method int length() {
    	return length;
    }

    /** Returns the character at the j-th location of this string. */
    method char charAt(int j) {
    	return block[j];
    }

    /** Sets the character at the j-th location of this string to c. */
    method void setCharAt(int j, char c) {
    	let block[j] = c;
    	return;
    }

    /** Appends c to this string's end and returns this string. */
    method String appendChar(char c) {
    	let block[length] = c;
    	let length = length+1;
    	return this;
    }

    /** Erases the last character from this string. */
    method void eraseLastChar() {
    	let length = length-1;
    	let block[length] = 0;
    	return;
    }

    /** Returns the integer value of this string, 
     *  until a non-digit character is detected. */
    method int intValue() {
	    var int v,i;
	    let v = 0;
	    let i = 0;
	    while(i < length){
		    let v = (v*10)+(block[i]-48);
		    let i = i+1;
	    }
	    return v;
    }

    /** Sets this string to hold a representation of the given value. */
    method void setInt(int val) {
	    //var char c;
	    var int r,c;
	    //var String s;
	    //let c = Math.mod(val,10)+48;
	    if(val < 0){
		    let block[0] = 45; //45=-
		    let length = 1;
		    let val = -val;
	    }else{
		    let length = 0;
	    }
	    //handle negatives!!!
	    if(val < 10){
		    //let s = String.new(256);
		    let block[length] = val+48;
		    let length = length+1;
		    return;
	    }else{
		    let r = val/10; //needs for the remainder.
		    let c = Math.remainder()+48;
		    do setInt(r);
		    let block[length] = c;
		    let length = length + 1;
		    return;
	    }
    }

    /** Returns the new line character. */
    function char newLine() {
    	return 128;
    }

    /** Returns the backspace character. */
    function char backSpace() {
    	return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
    	return 34;
    }
}
